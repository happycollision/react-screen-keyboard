{"version":3,"sources":["../src/KeyboardButton.js"],"names":["allowOnly","KeyboardButton","handleValidInput","props","isDisabled","onClick","value","handleClickAttempt","e","handleTouchAttempt","classes","autofocus","propTypes","oneOfType","string","isRequired","node","func","bool","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;AAEA,IAAIA,YAAY,CAAhB;;IAEqBC,c;;;;;;;;;;;;;;oMAepBC,gB,GAAmB,YAAM;AACxB,OAAI,CAAC,MAAKC,KAAL,CAAWC,UAAhB,EAA4B;AAC3B,UAAKD,KAAL,CAAWE,OAAX,CAAmB,MAAKF,KAAL,CAAWG,KAA9B;AACA;AACD,G,QAEDC,kB,GAAqB,UAACC,CAAD,EAAO;AAC3B,OAAIR,cAAc,CAAlB,EAAqB;AACrB,OAAIA,cAAc,CAAlB,EAAqBA,YAAY,CAAZ;AACrB,OAAIA,cAAc,CAAlB,EAAqB,MAAKE,gBAAL;AACrB,G,QAEDO,kB,GAAqB,UAACD,CAAD,EAAO;AAC3B,OAAIR,cAAc,CAAlB,EAAqB;AACrB,OAAIA,cAAc,CAAlB,EAAqBA,YAAY,CAAZ;AACrB,OAAIA,cAAc,CAAlB,EAAqB,MAAKE,gBAAL;AACrB,G;;;;;2BAEQ;AACR,UACC;AAAA;AAAA;AACC,WAAK,QADN;AAEC,qCAA8B,KAAKC,KAAL,CAAWO,OAF1C;AAGC,gBAAW,KAAKH,kBAHjB;AAIC,iBAAY,KAAKE,kBAJlB;AAKC,gBAAW,KAAKN,KAAL,CAAWQ,SALvB;AAMC,eAAU,KAAKR,KAAL,CAAWC;AANtB;AAQE,SAAKD,KAAL,CAAWG;AARb,IADD;AAYA;;;;;;AA9CmBL,c,CACbW,S,GAAY;AAClBN,QAAO,oBAAUO,SAAV,CAAoB,CAAC,oBAAUC,MAAV,CAAiBC,UAAlB,EAA8B,oBAAUC,IAAV,CAAeD,UAA7C,CAApB,CADW;AAElBL,UAAS,oBAAUI,MAFD;AAGlBT,UAAS,oBAAUY,IAAV,CAAeF,UAHN;AAIlBJ,YAAW,oBAAUO,IAJH;AAKlBd,aAAY,oBAAUc;AALJ,C;AADCjB,c,CASbkB,Y,GAAe;AACrBT,UAAS,EADY;AAErBC,YAAW,KAFU;AAGrBP,aAAY;AAHS,C;kBATFH,c","file":"KeyboardButton.js","sourcesContent":["import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\n\nlet allowOnly = 0;\n\nexport default class KeyboardButton extends PureComponent {\n\tstatic propTypes = {\n\t\tvalue: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.node.isRequired]),\n\t\tclasses: PropTypes.string,\n\t\tonClick: PropTypes.func.isRequired,\n\t\tautofocus: PropTypes.bool,\n\t\tisDisabled: PropTypes.bool,\n\t};\n\n\tstatic defaultProps = {\n\t\tclasses: '',\n\t\tautofocus: false,\n\t\tisDisabled: false,\n\t};\n\n\thandleValidInput = () => {\n\t\tif (!this.props.isDisabled) {\n\t\t\tthis.props.onClick(this.props.value)\n\t\t}\n\t}\n\n\thandleClickAttempt = (e) => {\n\t\tif (allowOnly === 2) return;\n\t\tif (allowOnly === 0) allowOnly = 1;\n\t\tif (allowOnly === 1) this.handleValidInput();\n\t}\n\n\thandleTouchAttempt = (e) => {\n\t\tif (allowOnly === 1) return;\n\t\tif (allowOnly === 0) allowOnly = 2;\n\t\tif (allowOnly === 2) this.handleValidInput();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclassName={`keyboard-button ${this.props.classes}`}\n\t\t\t\tonMouseUp={this.handleClickAttempt}\n\t\t\t\tonTouchEnd={this.handleTouchAttempt}\n\t\t\t\tautoFocus={this.props.autofocus}\n\t\t\t\tdisabled={this.props.isDisabled}\n\t\t\t>\n\t\t\t\t{this.props.value}\n\t\t\t</button>\n\t\t);\n\t}\n}\n"]}