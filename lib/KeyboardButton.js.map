{"version":3,"sources":["../src/KeyboardButton.js"],"names":["KeyboardButton","allowOnly","handleValidInput","console","log","props","isDisabled","onClick","value","e","classes","handleClickAttempt","handleTouchAttempt","autofocus","propTypes","oneOfType","string","isRequired","node","func","bool","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;IAEqBA,c;;;;;;;;;;;;;;oMAepBC,S,GAAY,C,QAEZC,gB,GAAmB,YAAM;AACxBC,WAAQC,GAAR,CAAY,sBAAZ;AACA,OAAI,CAAC,MAAKC,KAAL,CAAWC,UAAhB,EAA4B;AAC3B,UAAKD,KAAL,CAAWE,OAAX,CAAmB,MAAKF,KAAL,CAAWG,KAA9B;AACA;AACD,G;;;;;qCAEkBC,C,EAAG;AACrBN,WAAQC,GAAR,CAAY,iBAAZ;AACA,OAAI,KAAKH,SAAL,KAAmB,CAAvB,EAA0B;AAC1B,OAAI,KAAKA,SAAL,KAAmB,CAAvB,EAA0B,KAAKA,SAAL,GAAiB,CAAjB;AAC1B,OAAI,KAAKA,SAAL,KAAmB,CAAvB,EAA0B,KAAKC,gBAAL;AAC1B;;;qCAEkBO,C,EAAG;AACrBN,WAAQC,GAAR,CAAY,iBAAZ;AACA,OAAI,KAAKH,SAAL,KAAmB,CAAvB,EAA0B;AAC1B,OAAI,KAAKA,SAAL,KAAmB,CAAvB,EAA0B,KAAKA,SAAL,GAAiB,CAAjB;AAC1B,OAAI,KAAKA,SAAL,KAAmB,CAAvB,EAA0B,KAAKC,gBAAL;AAC1B;;;2BAEQ;AACR,UACC;AAAA;AAAA;AACC,WAAK,QADN;AAEC,qCAA8B,KAAKG,KAAL,CAAWK,OAF1C;AAGC,gBAAW,KAAKC,kBAHjB;AAIC,mBAAc,KAAKC,kBAJpB;AAKC,gBAAW,KAAKP,KAAL,CAAWQ,SALvB;AAMC,eAAU,KAAKR,KAAL,CAAWC;AANtB;AAQE,SAAKD,KAAL,CAAWG;AARb,IADD;AAYA;;;;;;AAnDmBR,c,CACbc,S,GAAY;AAClBN,QAAO,oBAAUO,SAAV,CAAoB,CAAC,oBAAUC,MAAV,CAAiBC,UAAlB,EAA8B,oBAAUC,IAAV,CAAeD,UAA7C,CAApB,CADW;AAElBP,UAAS,oBAAUM,MAFD;AAGlBT,UAAS,oBAAUY,IAAV,CAAeF,UAHN;AAIlBJ,YAAW,oBAAUO,IAJH;AAKlBd,aAAY,oBAAUc;AALJ,C;AADCpB,c,CASbqB,Y,GAAe;AACrBX,UAAS,EADY;AAErBG,YAAW,KAFU;AAGrBP,aAAY;AAHS,C;kBATFN,c","file":"KeyboardButton.js","sourcesContent":["import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class KeyboardButton extends PureComponent {\r\n\tstatic propTypes = {\r\n\t\tvalue: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.node.isRequired]),\r\n\t\tclasses: PropTypes.string,\r\n\t\tonClick: PropTypes.func.isRequired,\r\n\t\tautofocus: PropTypes.bool,\r\n\t\tisDisabled: PropTypes.bool,\r\n\t};\r\n\r\n\tstatic defaultProps = {\r\n\t\tclasses: '',\r\n\t\tautofocus: false,\r\n\t\tisDisabled: false,\r\n\t};\r\n\r\n\tallowOnly = 0;\r\n\r\n\thandleValidInput = () => {\r\n\t\tconsole.log('valid input detected');\r\n\t\tif (!this.props.isDisabled) {\r\n\t\t\tthis.props.onClick(this.props.value)\r\n\t\t}\r\n\t}\r\n\r\n\thandleClickAttempt(e) {\r\n\t\tconsole.log('click attempted');\r\n\t\tif (this.allowOnly === 2) return;\r\n\t\tif (this.allowOnly === 0) this.allowOnly = 1;\r\n\t\tif (this.allowOnly === 1) this.handleValidInput();\r\n\t}\r\n\r\n\thandleTouchAttempt(e) {\r\n\t\tconsole.log('touch attempted');\r\n\t\tif (this.allowOnly === 1) return;\r\n\t\tif (this.allowOnly === 0) this.allowOnly = 2;\r\n\t\tif (this.allowOnly === 2) this.handleValidInput();\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<button\r\n\t\t\t\ttype=\"button\"\r\n\t\t\t\tclassName={`keyboard-button ${this.props.classes}`}\r\n\t\t\t\tonMouseUp={this.handleClickAttempt}\r\n\t\t\t\tonTouchStart={this.handleTouchAttempt}\r\n\t\t\t\tautoFocus={this.props.autofocus}\r\n\t\t\t\tdisabled={this.props.isDisabled}\r\n\t\t\t>\r\n\t\t\t\t{this.props.value}\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n}\r\n"]}